<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt not today</name>
        <order>90</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[// Instantiate the NeedItUtils class.  Call the isDatePast method and pass 
// the u_when_needed value.
var niutils = new NeedItUtils();
var isToday = niutils.isDateToday(current.u_when_needed);
gs.addInfoMessage("[NeedIt When needed field date today]" + isToday);

// If the isDatePast method returns true, the date is in the past.
if (isToday == true) {
    gs.addErrorMessage("When needed date cannot be in the past.  Your request has not been saved to the database.");
    current.setAbortAction(true);
}



// // rightnow stores the current time
// 	var rightnow = new GlideDateTime();
//     var today = rightnow.getDate();
// gs.info("[NeedIt not today]:" + today);
// 	// Create a GlideDateTime object for the When needed date
// 	var whenNeeded = new GlideDateTime(current.u_when_needed);
//     var whenNeededDate = whenNeeded.getDate();
	
// 	// If the When needed date is before rightnow, do not write the record to the database
// 	// Output an error message to the screen
	
// 	if(whenNeededDate.getValue() == today.getValue()){
// 		gs.addErrorMessage("You can not submit for today to fullfil your reqquest. Pick a date for tomorrow.");
// 		current.setAbortAction(true);
// 	}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-10-08 19:17:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9f5176e007731010d5dffa9e7c1ed044</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>NeedIt not today</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_9f5176e007731010d5dffa9e7c1ed044</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-10-12 20:19:21</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9f5176e007731010d5dffa9e7c1ed044"/>
</record_update>
